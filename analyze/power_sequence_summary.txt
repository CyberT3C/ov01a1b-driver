# Power Sequence Summary for OV01A1B

Based on OV01A10/OV01A1S analysis:

1. Common I2C Addresses:
   - 0x36 (most common for OV01Axx)
   - 0x3c (alternative)
   - 0x10, 0x20 (less common)

2. Clock Requirements:
   - XVCLK: 19.2 MHz or 24 MHz
   - Must be enabled before I2C access

3. Power Supplies:
   - AVDD: Analog power (2.8V typical)
   - DOVDD: Digital I/O power (1.8V typical)
   - DVDD: Digital core power (1.2V typical)

4. GPIO Control:
   - Reset GPIO (active low usually)
   - Powerdown GPIO (active high usually)

5. Typical Power On Sequence:
   a. Enable all regulators
   b. Wait 1-2ms
   c. Enable XVCLK
   d. Wait 1-2ms  
   e. Release powerdown (set to 0)
   f. Wait 1-2ms
   g. Toggle reset (1->0)
   h. Wait 20ms for boot
   i. I2C communication ready

6. Power Off: Reverse order

Notes:
- Some sensors work without explicit regulator control (using always-on supplies)


# First Test output 
from power test kerne modul

sudo dmesg | grep -A 30 "OV01A1B Power Test Probe"
[15087.733055] ov01a1b_power_test i2c-OVTI01AB:00: === OV01A1B Power Test Probe ===
[15087.733066] ov01a1b_power_test i2c-OVTI01AB:00: Client address: 0x10
[15087.733070] ov01a1b_power_test i2c-OVTI01AB:00: Adapter: usb_ljca.ljca-i2c.1-3-4:1.0-1
[15087.733086] ov01a1b_power_test i2c-OVTI01AB:00: supply avdd not found, using dummy regulator
[15087.733162] ov01a1b_power_test i2c-OVTI01AB:00: supply dovdd not found, using dummy regulator
[15087.733182] ov01a1b_power_test i2c-OVTI01AB:00: supply dvdd not found, using dummy regulator
[15087.841491] ov01a1b_power_test i2c-OVTI01AB:00: Starting OV01A10-style power sequence...
[15087.841503] ov01a1b_power_test i2c-OVTI01AB:00: Enabling regulators...
[15087.842887] ov01a1b_power_test i2c-OVTI01AB:00: Enabling XVCLK at 19200000 Hz...
[15087.845806] ov01a1b_power_test i2c-OVTI01AB:00: Toggling reset...
[15087.869023] ov01a1b_power_test i2c-OVTI01AB:00: Waiting for sensor initialization...
[15087.879997] ov01a1b_power_test i2c-OVTI01AB:00: Probing I2C addresses...
[15087.987074] ov01a1b_power_test i2c-OVTI01AB:00: Response from address 0x10: 0x56
[15087.987094] ov01a1b_power_test i2c-OVTI01AB:00: Found device at address 0x10!
[15087.989328] ov01a1b_power_test i2c-OVTI01AB:00: 
               Direct I2C scan on bus 19:
[15087.989340] ov01a1b_power_test i2c-OVTI01AB:00: 
               === Test Complete ===
[15087.989344] ov01a1b_power_test i2c-OVTI01AB:00: Check dmesg and try: sudo i2cdetect -y -r 19
[15087.989430] ------------[ cut here ]------------
# First Test output

sudo dmesg | grep -A 30 "OV01A1B Power Test Probe"
[15087.733055] ov01a1b_power_test i2c-OVTI01AB:00: === OV01A1B Power Test Probe ===
[15087.733066] ov01a1b_power_test i2c-OVTI01AB:00: Client address: 0x10
[15087.733070] ov01a1b_power_test i2c-OVTI01AB:00: Adapter: usb_ljca.ljca-i2c.1-3-4:1.0-1
[15087.733086] ov01a1b_power_test i2c-OVTI01AB:00: supply avdd not found, using dummy regulator
[15087.733162] ov01a1b_power_test i2c-OVTI01AB:00: supply dovdd not found, using dummy regulator
[15087.733182] ov01a1b_power_test i2c-OVTI01AB:00: supply dvdd not found, using dummy regulator
[15087.841491] ov01a1b_power_test i2c-OVTI01AB:00: Starting OV01A10-style power sequence...
[15087.841503] ov01a1b_power_test i2c-OVTI01AB:00: Enabling regulators...
[15087.842887] ov01a1b_power_test i2c-OVTI01AB:00: Enabling XVCLK at 19200000 Hz...
[15087.845806] ov01a1b_power_test i2c-OVTI01AB:00: Toggling reset...
[15087.869023] ov01a1b_power_test i2c-OVTI01AB:00: Waiting for sensor initialization...
[15087.879997] ov01a1b_power_test i2c-OVTI01AB:00: Probing I2C addresses...
[15087.987074] ov01a1b_power_test i2c-OVTI01AB:00: Response from address 0x10: 0x56
[15087.987094] ov01a1b_power_test i2c-OVTI01AB:00: Found device at address 0x10!
[15087.989328] ov01a1b_power_test i2c-OVTI01AB:00: 
               Direct I2C scan on bus 19:
[15087.989340] ov01a1b_power_test i2c-OVTI01AB:00: 
               === Test Complete ===
[15087.989344] ov01a1b_power_test i2c-OVTI01AB:00: Check dmesg and try: sudo i2cdetect -y -r 19
[15087.989430] ------------[ cut here ]------------

# How do we proceed?
i2c-tools do not work well under Nixos since we dont have /dev/ic2/
Lets try to read the chip id by the kerne modul






